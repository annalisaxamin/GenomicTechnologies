setwd("~/Desktop/Genomic Technologies/Slides/SC_case_study")
setwd("~/Desktop/Genomic Technologies/Slides/SC_case_study")
library(tidyverse) # collection of packages for tidy data analysis (ggplot, dplyr, ...)
library(Seurat) # single cell analysis (Check that the version is at least 4.0.0)
library(patchwork) # combine separate ggplots into the same graphic
load("./data/pbmc.RData")
pbmc_mat[500:505, 1:30] # Examine a few genes in the first 30 cells
load("./data/pbmc.RData")
pbmc_mat[500:505, 1:30] # Examine a few genes in the first 30 cells
dim(pbmc_mat) # dimension of the count matrix
pbmc <- CreateSeuratObject(counts = pbmc_mat,
project = "pbmc", # name of the project
min.cells = 3,   # filter for genes (rows)
min.features = 50 # filter for cells (columns)
)
pbmc
# The [[ operator can add columns to the object meta.data, ideal to stash QC stats
pbmc[["percent_mt"]] <- PercentageFeatureSet(pbmc, pattern = "^MT-")
# reads that map to the mitochondrial genome
# Show QC metrics for the first 5 cells
head(pbmc@meta.data, 5)
p1<- VlnPlot(pbmc, features = c("nFeature_RNA", "nCount_RNA", "percent_mt"), ncol = 3, pt.size = 0.01)
p1
p1<- VlnPlot(pbmc, features = c("nFeature_RNA", "nCount_RNA", "percent_mt"), ncol = 3, pt.size = 0.01)
p1
p1<- VlnPlot(pbmc, features = c("nFeature_RNA", "nCount_RNA", "percent_mt"), ncol = 3, pt.size = 0.01)
p1
plot1 <- FeatureScatter(pbmc, feature1 = "nCount_RNA", feature2 = "percent_mt")
plot2 <- FeatureScatter(pbmc, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
plot1 + plot2
plot1 <- FeatureScatter(pbmc, feature1 = "nCount_RNA", feature2 = "percent_mt")
plot2 <- FeatureScatter(pbmc, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
plot1 + plot2
pbmc <- subset(pbmc, subset = nFeature_RNA > 200 &
nFeature_RNA < 2500 &
percent_mt < 5)
pbmc
pbmc <- NormalizeData(pbmc,
normalization.method = "LogNormalize",
scale.factor = 10000)
pbmc[["RNA"]]@data[10:15,1:20]
pbmc <- FindVariableFeatures(pbmc,
selection.method = "vst",
nfeatures = 2000)
# Identify the 10 most highly variable genes
top10 <- head(VariableFeatures(pbmc), 10)
# plot variable features with labels
plot1 <- VariableFeaturePlot(pbmc)
plot2 <- LabelPoints(plot = plot1, points = top10, repel = TRUE)
plot2
all_genes <- rownames(pbmc) # perform scaling on all genes (by default, only the top 2000 are scaled)
pbmc <- ScaleData(pbmc,
features = all_genes)
pbmc[["RNA"]]@scale.data[1:5,1:10]
pbmc <- RunPCA(pbmc,
features = VariableFeatures(object = pbmc),
verbose = F)
VizDimLoadings(pbmc, dims = 1:2, reduction = "pca")
DimPlot(pbmc, reduction = "pca")
DimHeatmap(pbmc, dims = 1:2,
cells = 500,
balanced = TRUE)
pbmc <- FindNeighbors(pbmc, dims = 1:10)
pbmc <- FindClusters(pbmc, resolution = 0.5)
head(Idents(pbmc), 5)
ElbowPlot(pbmc)
pbmc <- FindNeighbors(pbmc, dims = 1:10)
pbmc <- FindClusters(pbmc, resolution = 0.5)
head(Idents(pbmc), 5)
pbmc <- RunPCA(pbmc,
features = VariableFeatures(object = pbmc),
verbose = F)
# DO NOT CHANGE
knitr::opts_chunk$set(warning=FALSE,
message=FALSE,
tidy.opts=list(width.cutoff = 60),
tidy = TRUE,
fig.width = 6,
fig.height = 5,
fig.align = "center"
)
pbmc <- subset(pbmc, subset = nFeature_RNA > 200 &  # lower bound
nFeature_RNA < 2500 & # upper bound
percent_mt < 5)
# DO NOT CHANGE
knitr::opts_chunk$set(warning=FALSE,
message=FALSE,
tidy.opts=list(width.cutoff = 60),
tidy = TRUE,
fig.width = 6,
fig.height = 5,
fig.align = "center"
)
library(tidyverse) # collection of packages for tidy data analysis (ggplot, dplyr, ...)
library(Seurat) # single cell analysis (Check that the version is at least 4.0.0)
library(patchwork) # combine separate ggplots into the same graphic
load("./data/pbmc.RData")
pbmc_mat[500:505, 1:30] # Examine a few genes in the first 30 cells
dim(pbmc_mat) # dimension of the count matrix
pbmc <- CreateSeuratObject(counts = pbmc_mat,
project = "pbmc", # name of the project
min.cells = 3,   # filter for genes (rows)
min.features = 50 # filter for cells (columns)
)
pbmc
# The [[ operator can add columns to the object meta.data, ideal to stash QC stats
pbmc[["percent_mt"]] <- PercentageFeatureSet(pbmc, pattern = "^MT-")
# reads that map to the mitochondrial genome
# Show QC metrics for the first 5 cells
head(pbmc@meta.data, 5)
p1<- VlnPlot(pbmc, features = c("nFeature_RNA", "nCount_RNA", "percent_mt"), ncol = 3, pt.size = 0.01)
p1
plot1 <- FeatureScatter(pbmc, feature1 = "nCount_RNA", feature2 = "percent_mt")
plot2 <- FeatureScatter(pbmc, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
plot1 + plot2
setwd("~/Desktop/Genomic Technologies/Slides/SC_case_study")
setwd("~/Documents/Repo_Git/GenomicTechnologies/SC_case_study")
